continue
  xml.PersonName "chetu"
continue
 xml.PersonName "chetu"
continue
response.body
response.code == "200"
 response = HTTParty.post("https://hooks.zapier.com/hooks/catch/12114300/ba9f02q/",headers: { 'Content-Type' => "application/json"}, body:  @users_data ).response
@users_data = user_send(user)
continue
 @users_data = user_data.to_json
firstName" => @user.fname
 @user = user
"firstName" => @user.fname
continue
response.code == "200"
response = HTTParty.post("https://hooks.zapier.com/hooks/catch/12114300/ba9f02q/",headers: { 'Content-Type' => "application/json"}, body:  @users_data ).response
 @users_data = user_send(user)
continue
"fname" => @user("fname")
continue
 { "fname" => @user"(fname)"}
v = { "fname" => @user"(fname)"}
v = {}
 "fname" => @user"(fname)"
 "fname" => (@user.fname)
 "fname" => "(@user.fname)"
 fname = @user.fname
 "fname" => @user.fname
 @user = user
 "fname" => @user.fname
continue
"fname" => user.fname
"fname" => @user.fname
@user.fname
 "fname" => @user.fname("fname")
 @user = user
continue
"fname" => @user.("fname")
"fname" => user("fname")
"fname" => user.("fname")
"fname" => @user.("fname")
 @user = user
continue
 @user.phone
 @user.lname
 @user
"fname" => ("fname")
 @user = user 
continue
 @current_cart.line_items.each do |item|
  @order.save
item.cart_id = nil
  @order.line_items << item
 @current_cart.line_items
continue
number_to_currency
line_item_add_path
 @line_item.price
 @line_item.quantity
 number_to_currency
 number_to_currenc
 @line_item.quantity
total_price
 <%total_price = @line_item.quantity * @line_item.price  %>
continue
Style Code Is Ble. Pattern Is Solid. Capacity Is 70 L. Body Type, Material Is Hard Body, Polyester. Color Is Blue. Ideal For Is Men & Women. Sales Package Is 1 Suitcase Bag ...
continue
params  LineItem.find(id: params[:id])
 LineItem.find(id: params[:id])
 @line_item
 @line_item = LineItem.find(id: params[:id])
continue
Product.all
Product.last
LineItem.all
LineItem
 LineItem.select('line_items.price','products.name').joins('join products on products.id = line_items.product_id')
continue
Product.last
Product.find(1).avatar
Product.all
params
 LineItem.select('line_items.price','products.name').joins('join products on products.id = line_items.product_id')
continue

continue
LineItem.select('line_items.price','products.name').joins('join products on products.id = line_items.product_id')
continue
params
continue
LineItem.create(user_id: current_user.id, product_id: params[:id],cart_id: current_cart.id, price: params[:price], quantity:1)
 @cart_items
current_cart.save
current_user.cart.present?
 current_cart 
continue
 LineItem.create(user_id: current_user.id, product_id: params[:id],cart_id: current_cart.id, price: params[:price], quantity:1)
@cart_items
current_cart
 Cart.create(:user_id => current_user.id)
 current_user.cart
 current_user.cart.present?
 current_cart
continue
LineItem
Line_Item
Cart_Item
@cart_items = Cart_Item.create!(user_id: current_user.id ,product_id: params[:id],cart_id: current_cart.id,price: params[:price],quntity:1)
  @cart_items = Cart_Item.create!(user_id: current_user.id ,product_id: params[:id],cart_id: current_cart.id,price: params[:price],quntity:1)
@cart_items
current_cart
current_cart?
current_cart = current_user.cart.present? ? current_user.cart : Cart.create(:user_id => current_user.id)
current_cart
current_cart?
current_cart.save?
Cart.create(:user_id => current_user.id)
current_user.cart
current_user.cart.present?
current_user
continue
current_user
current_user.cart.present?
continue
params
params[:id]
Cart.create(:user_id => params[:id])
current_user.cart
current_user.cart.present
continue
Curt
current_cart
params
continue
current_user.cart.present?
current_user
Cart
current_user.cart ? current_user.cart : current_user.cart.create(:user_id => current_user.id)
current_user.cart
current_user
